{"version":3,"sources":["components/Header.js","components/ItemList.js","components/List.js","components/Spinner.js","components/ScrollButton.js","App.js","components/useData.js","reportWebVitals.js","index.js"],"names":["Header","search","setSearch","className","href","placeholder","value","onChange","e","target","ItemList","memo","list","title","body","userId","List","filterList","length","map","id","Spinner","ScrollButton","useState","visible","setVisible","window","addEventListener","scroll","document","documentElement","scrollTop","onClick","scrollTo","top","behavior","xmlns","width","height","fill","viewBox","d","App","setList","user","setUser","more","setMore","loading","setLoading","filter","lista","toLowerCase","includes","consultNewData","setTimeout","prev","useData","useEffect","url","fetch","then","response","json","data","prevList","concat","catch","error","console","log","dataLength","next","hasMore","scrollThreshold","loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bfa560d2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = ({ search, setSearch }) => {\r\n  return (\r\n    <nav className=\"header d-block d-sm-flex\">\r\n      <div className=\"header-title mb-2 mb-sm-0\">\r\n        <a href=\"https://pieroab.github.io/desafio-frontend/#\">\r\n          Minuto a Minuto\r\n        </a>\r\n      </div>\r\n\r\n      <div className=\"d-flex align-items-center col-12 col-sm-5 col-md-4 col-lg-2 \">\r\n        <input\r\n          placeholder=\"Buscar...\"\r\n          className=\" form-control m-2\"\r\n          value={search}\r\n          onChange={e => setSearch(e.target.value)}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { memo } from \"react\";\r\n\r\nconst ItemList = memo(({ list }) => {\r\n  return (\r\n    <li className=\"card\">\r\n      <div className=\"card-body\">\r\n        <h4 className=\"card-title\">{list.title}</h4>\r\n        <p className=\"card-text\">{list.body}</p>\r\n        <p className=\"card-text\"> Comentario del Usuario : {list.userId}</p>\r\n      </div>\r\n    </li>\r\n  );\r\n});\r\n\r\nexport default ItemList;\r\n","import ItemList from \"./ItemList\";\r\n\r\nconst List = ({ filterList }) => {\r\n  return (\r\n    <div className=\"col-12 col-lg-8 m-auto\">\r\n      <div className=\"list-result\">\r\n        <p>Se encontró {filterList.length} resultado(s). </p>\r\n      </div>\r\n      <div className=\"list-item\">\r\n        <ul>\r\n          {filterList.map(list => (\r\n            <ItemList key={list.id} list={list} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loading\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { memo, useState } from \"react\";\r\n\r\nconst ScrollButton = memo(() => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const buttonVisible = () => {\r\n    const scroll = document.documentElement.scrollTop;\r\n    if (scroll > 400) {\r\n      setVisible(true);\r\n    } else if (scroll <= 400) {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", buttonVisible);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"scroll-button\">\r\n      <a\r\n        href=\"https://pieroab.github.io/desafio-frontend/#\"\r\n        className={visible ? \"d-inline\" : \"d-none\"}\r\n        onClick={scrollToTop}\r\n      >\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"45\"\r\n          height=\"45\"\r\n          fill=\"currentColor\"\r\n          className=\"bi bi-arrow-up-circle-fill\"\r\n          viewBox=\"0 0 16 16\"\r\n        >\r\n          <path d=\"M16 8A8 8 0 1 0 0 8a8 8 0 0 0 16 0zm-7.5 3.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V11.5z\" />\r\n        </svg>\r\n      </a>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ScrollButton;\r\n","import \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport List from \"./components/List\";\r\nimport React, { useEffect } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Spinner from \"./components/Spinner\";\r\nimport { useData } from \"./components/useData\";\r\nimport ScrollButton from \"./components/ScrollButton\";\r\n\r\nfunction App() {\r\n  const {\r\n    search,\r\n    setSearch,\r\n    more,\r\n    loading,\r\n    filterList,\r\n    consultNewData,\r\n    setList,\r\n    setLoading,\r\n    user,\r\n  } = useData();\r\n\r\n  useEffect(() => {\r\n    const url = `https://jsonplaceholder.typicode.com/users/${user}/posts`;\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setList(prevList => prevList.concat(data));\r\n      })\r\n      .catch(error => console.log(error));\r\n\r\n    setLoading(false);\r\n  }, [user, setList, setLoading]);\r\n\r\n  return (\r\n    <>\r\n      <Header search={search} setSearch={setSearch} />\r\n      <InfiniteScroll\r\n        dataLength={filterList.length}\r\n        next={search.length < 1 && consultNewData}\r\n        hasMore={more}\r\n        scrollThreshold={0.9}\r\n        loader={!loading && search.length < 1 && <Spinner />}\r\n      >\r\n        <div className=\"container\">\r\n          {loading ? <Spinner /> : <List filterList={filterList} />}\r\n        </div>\r\n\r\n        {search.length > 0 && (\r\n          <div className=\"text-center p-3 \">\r\n            <p className=\"new-data\">\r\n              El buscador debe de estar vacío si usted desea obtener nuevo\r\n              datos.\r\n            </p>\r\n          </div>\r\n        )}\r\n      </InfiniteScroll>\r\n      <ScrollButton />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { useState } from \"react\";\r\n\r\nfunction useData() {\r\n  const [list, setList] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [user, setUser] = useState(1);\r\n  const [more, setMore] = useState(true);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  let filterList = [];\r\n\r\n  const consultNewData = () => {\r\n    if (user >= 10) {\r\n      setMore(false);\r\n      return;\r\n    } else {\r\n      setTimeout(() => {\r\n        setUser(prev => prev + 1);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  if (search.length < 1) {\r\n    filterList = [...list];\r\n  } else {\r\n    filterList = list.filter(lista => {\r\n      const listaLower = lista.title.toLowerCase();\r\n      return listaLower.includes(search.toLowerCase());\r\n    });\r\n  }\r\n\r\n  return {\r\n    search,\r\n    setSearch,\r\n    more,\r\n    loading,\r\n    filterList,\r\n    consultNewData,\r\n    setList,\r\n    setLoading,\r\n    user,\r\n  };\r\n}\r\n\r\nexport { useData };\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <App />,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}